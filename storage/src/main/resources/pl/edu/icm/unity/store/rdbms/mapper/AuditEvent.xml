<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pl.edu.icm.unity.store.impl.audit.AuditEventMapper">
	<resultMap id="auditEventResult" type="AuditEventB">
		<result property="id" column="ID"/>
		<result property="name" column="NAME"/>
		<result property="timestamp" column="TIMESTAMP"/>
		<result property="type" column="TYPE"/>
		<result property="subjectId" column="SUBJECT_ID"/>
		<result property="subjectName" column="SUBJECT_NAME"/>
		<result property="subjectEmail" column="SUBJECT_EMAIL"/>
		<result property="initiatorId" column="INITIATOR_ID"/>
		<result property="initiatorName" column="INITIATOR_NAME"/>
		<result property="initiatorEmail" column="INITIATOR_EMAIL"/>
		<result property="action" column="ACTION"/>
		<result property="contents" column="CONTENTS"/>
	</resultMap>
	
	<insert id="create" parameterType="AuditEventB" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO AUDIT_EVENTS (NAME, TIMESTAMP , TYPE, SUBJECT_ID, INITIATOR_ID, ACTION, CONTENTS)
			VALUES (#{name}, #{timestamp}, #{type}, #{subjectId}, #{initiatorId}, #{action}, #{contents})
	</insert>

	<insert id="createWithKey" parameterType="EventB">
		INSERT INTO AUDIT_EVENTS (ID, NAME, TIMESTAMP , TYPE, SUBJECT_ID, INITIATOR_ID, ACTION, CONTENTS)
			VALUES (#{id}, #{timestamp}, #{type}, #{subjectId}, #{initiatorId}, #{action}, #{contents})
	</insert>

	<update id="updateByKey" parameterType="EventB">
		UPDATE AUDIT_EVENTS SET NAME = #{name}, TIMESTAMP = #{timestamp}, TYPE = #{type},
			SUBJECT_ID = #{subjectId}, INITIATOR_ID = #{initiatorId},
			ACTION = #{action}, CONTENTS = #{contents}
		WHERE ID = #{id}
	</update>

	<select id="getByKey" parameterType="long" resultMap="auditEventResult">
		select E.ID, E.NAME, E.TIMESTAMP, E.TYPE, E.ACTION, E.CONTENTS,
		S.ENTITY_ID AS SUBJECT_ID, S.NAME AS SUBJECT_NAME, S.EMAIL AS SUBJECT_EMAIL,
		I.ENTITY_ID AS INITIATOR_ID, I.NAME AS INITIATOR_NAME, I.EMAIL AS INITIATOR_EMAIL
		from AUDIT_EVENTS AS E
		left join AUDIT_ENTITIES AS S on E.SUBJECT_ID = S.ENTITY_ID
		left join AUDIT_ENTITIES AS I on E.INITIATOR_ID = I.ENTITY_ID
	</select>

	<select id="getAll" resultMap="auditEventResult">
		select E.ID, E.NAME, E.TIMESTAMP, E.TYPE, E.ACTION, E.CONTENTS,
		S.ENTITY_ID AS SUBJECT_ID, S.NAME AS SUBJECT_NAME, S.EMAIL AS SUBJECT_EMAIL,
		I.ENTITY_ID AS INITIATOR_ID, I.NAME AS INITIATOR_NAME, I.EMAIL AS INITIATOR_EMAIL
		from AUDIT_EVENTS AS E
		left join AUDIT_ENTITIES AS S on E.SUBJECT_ID = S.ENTITY_ID
		left join AUDIT_ENTITIES AS I on E.INITIATOR_ID = I.ENTITY_ID
	</select>

	<delete id="deleteByKey" parameterType="long">
		DELETE FROM AUDIT_EVENTS WHERE ID = #{value}
	</delete>

	<delete id="deleteAll">
		DELETE FROM AUDIT_EVENTS
	</delete>

	<!-- custom -->

	<select id="auditEntityExists" parameterType="long" resultType="boolean">
		SELECT EXISTS(SELECT 1 FROM AUDIT_ENTITIES WHERE ENTITY_ID=#{id})
	</select>

	<insert id="createAuditEntity" parameterType="AuditEntityB" useGeneratedKeys="false">
		INSERT INTO AUDIT_ENTITIES (ENTITY_ID, NAME, EMAIL)
			VALUES (#{entityId}, #{name}, #{email})
	</insert>

	<select id="getTags" parameterType="long" resultType="string">
		SELECT TAG FROM AUDIT_EVENTS_TAGS WHERE EVENT_ID=#{eventId}
	</select>

	<insert id="insertTags">
		INSERT INTO AUDIT_EVENTS_TAGS (EVENT_ID, TAG) VALUES
		<foreach collection="tagList" item="item" index="index" separator=",">
			 (#{eventId},#{item})
		</foreach>
	</insert>
</mapper>
